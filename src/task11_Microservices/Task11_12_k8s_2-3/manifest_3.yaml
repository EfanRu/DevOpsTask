apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-multitool-deployment
  labels:
    app: nginx-multitool
spec:
  replicas: 1
  selector:
    matchLabels:
      app:  nginx-multitool
  template:
    metadata:
      labels:
        app:  nginx-multitool
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
          - containerPort: 8080
            name: web1
            protocol: TCP
        volumeMounts:
          - name: nginx-index
            mountPath: /usr/share/nginx/html/
#          - name: nginx-conf
#            mountPath: /etc/nginx/
      - name: multitool
        image: wbitt/network-multitool
        env:
          - name: HTTP_PORT
            valueFrom:
              configMapKeyRef:
                name: my-configmap
                key: HTTP_PORT
          - name: HTTPS_PORT
            valueFrom:
              configMapKeyRef:
                name: my-configmap
                key: HTTPS_PORT
        ports:
          - containerPort: 8081
            name: web2
            protocol: TCP
      volumes:
        - name: nginx-index
          configMap:
            name: my-configmap
        - name: nginx-conf
          configMap:
            name: my-nginx-config
        - name: secret-volume
          secret:
            secretName: my-app-secret-tls


---

apiVersion: v1
kind: Service
metadata:
  name: busybox-multitool-svc
spec:
  selector:
    app: nginx-multitool
  ports:
    - name: web1
      port: 443
    - name: web2
      port: 80

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
data:
  HTTP_PORT: "81"
  HTTPS_PORT: "444"
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Welcome to nginx!</title>
        <style>
            body {
                width: 35em;
                margin: 0 auto;
                font-family: Tahoma, Verdana, Arial, sans-serif;
            }
        </style>
    </head>
    <body>
    <h1>Welcome to netology task with nginx in k8s!!!</h1>
    <p>If you see this page, the nginx web server is successfully installed and
        working. Further configuration is required.</p>
    
    <p>For online documentation and support please refer to
        <a href="http://nginx.org/">nginx.org</a>.<br/>
        Commercial support is available at
        <a href="http://nginx.com/">nginx.com</a>.</p>
    
    <p><em>Thank you for using nginx.</em></p>
    </body>
    </html>

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: my-nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    
    pid        /var/run/nginx.pid;
    stderr instead of a log file.
    error_log  /dev/stderr warn;
    
    events {
        worker_connections  32;
    }
    
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
    
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log  /dev/stdout  main;
    
        sendfile        on;
    
        keepalive_timeout  65;
    
        server {
            listen       80;
            server_name  localhost;
    
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
        }
    
        server {
            listen       443    ssl;
            server_name  localhost;
    
            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }
    
            ssl_certificate /certs/server.crt;
            ssl_certificate_key /certs/server.key;
        }
    }


---

apiVersion: v1
kind: Secret
metadata:
  name: my-app-secret-tls
data:
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lVUHVTbkN4REVq
    NDZDandXTGl2Vm5JMEJLZzVFd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1FURWFNQmdHQTFVRUF3d1Ja
    R1Z0Ynk1dGJHOXdjMmgxWWk1amIyMHhDekFKQmdOVkJBWVRBbFZUTVJZdwpGQVlEVlFRSERBMVRZ
    VzRnUm5KaGJuTnBjMk52TUI0WERUSXpNVEl5TWpJd01qZ3pORm9YRFRJME1USXhNakl3Ck1qZ3pO
    Rm93UVRFYU1CZ0dBMVVFQXd3UlpHVnRieTV0Ykc5d2MyaDFZaTVqYjIweEN6QUpCZ05WQkFZVEFs
    VlQKTVJZd0ZBWURWUVFIREExVFlXNGdSbkpoYm5OcGMyTnZNSUlCSWpBTkJna3Foa2lHOXcwQkFR
    RUZBQU9DQVE4QQpNSUlCQ2dLQ0FRRUE2cWF6Wk4xMTh6Q1lLdjdacks1N1QwYWtvK1NmajYvV1VW
    NVloK1oyT25jRHhIZW1uSUFGCkpxSUR3azRMYXhXa3NrU0ZlRDI2Q0ZsME9BOFVMTmdyMmZ1SEZM
    OHk3Q3lNTWh6T3JaSkVwYk4rL1BVV3JEamoKRkYxeU1WTml3TW1GUnh2Ny9HbzlYeTloUUNEZFlY
    a21nblNTYVViN3h5S1dMOGNaUFpPWWowQWZLR1hSbTdHMQp0Y0pMRE4rZjlpYUFUVlA2RDdnYmJH
    cVo0T0pmbGNaUkQxRFRteTZQR0dSYmdEbUgwdmtYNzlIK0lkM1d2M1NDCnYvSm5BVjhJdDNTMHBm
    SldBSDl4bncrbjJhajJ2WUNrTHJMTDJ3QjhDNjVEQzQrbXFySVM0YXUydEkxQzlnN20KcXZWbGJz
    NkZ2ejNPRU1IOG9wTWk1YjQyNHlwMU44MzdEUUlEQVFBQm8xTXdVVEFkQmdOVkhRNEVGZ1FVZW1r
    YQp1bVZEK3hScUdWaUM0WkgzYzVIejdZa3dId1lEVlIwakJCZ3dGb0FVZW1rYXVtVkQreFJxR1Zp
    QzRaSDNjNUh6CjdZa3dEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFP
    Q0FRRUFtaHhmM2lJa2hOLzQKQ25GNGpVOEdML0xxOVBlL1Ayak5nNmRVZ2dETXN0bnlQZTJFeVpv
    RGs1UkhiZVBIR1RHYVlKdWllanBhNXRIMwpZa0NFWW9rdUxGa1VhdlQ5OEUvaVlESWd6aFdrOFN2
    cWI4YlVTcERkNXRndkJDZ0d4eTdrMXFwdTVkcUVmQUdZCkJlME1RMzdCL1BKNHpMMHByU0ZaM09K
    M3Y1M0M5SFZ4WGRjWjVmUXAwdTh5TEZjNitzbmtTWVRsZndvVjhIYkkKdSsvTEtkTjZFVUdWVUk2
    RG5DU2dFN3Z1ZjcwV2VDMTJ0aE1KNElmZytvZi91V2w2ekpBNmpiMkNLTTIrYVUySApNR1FLQ3dp
    Ny8vcmV4ZEJiak4rRDl3Z2NabFNQZVhieEFJUVVXWGtleDUwYW50RTFOTURzVTgxWDhkWHY2bDYw
    CmJMOHB5VFhVdVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: |
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZB
    QVNDQktZd2dnU2lBZ0VBQW9JQkFRRHFwck5rM1hYek1KZ3EKL3Rtc3JudFBScVNqNUorUHI5WlJY
    bGlINW5ZNmR3UEVkNmFjZ0FVbW9nUENUZ3RyRmFTeVJJVjRQYm9JV1hRNApEeFFzMkN2Wis0Y1V2
    ekxzTEl3eUhNNnRra1NsczM3ODlSYXNPT01VWFhJeFUyTEF5WVZIRy92OGFqMWZMMkZBCklOMWhl
    U2FDZEpKcFJ2dkhJcFl2eHhrOWs1aVBRQjhvWmRHYnNiVzF3a3NNMzUvMkpvQk5VL29QdUJ0c2Fw
    bmcKNGwrVnhsRVBVTk9iTG84WVpGdUFPWWZTK1JmdjBmNGgzZGEvZElLLzhtY0JYd2kzZExTbDhs
    WUFmM0dmRDZmWgpxUGE5Z0tRdXNzdmJBSHdMcmtNTGo2YXFzaExocTdhMGpVTDJEdWFxOVdWdXpv
    Vy9QYzRRd2Z5aWt5TGx2amJqCktuVTN6ZnNOQWdNQkFBRUNnZ0VBSVBvTEFaeWZBQzJlNFFIK1lP
    YUhoVmxoOTNlQWxoNnAwYmNlM1lCOXNwTTUKeUJGaHJLSlFOd0R6WXNuNWtGUFRHTXVJNzJCTFpm
    TitZZ2Q2ZUIvc0w3OEoyWmhTUlg4d043VzFOUTcyajB2MQp4NEtCTEhSMU0wNDdwMk4yNEMyaUNa
    K003d2tXTld1UThRUjlZRDY0c3dKRGRrQ256ekZVNW9PR1VGRlBFaWgxCm8xU01RdFFsTW9NY2U2
    MVBuZ2MzK0FFWkMvY3ZML1V1Q291bDJHeWRSZHE3SzFoa1VFcC9wKzRkTTZya2F6ajkKMGRaOTRJ
    ckJHbmtxb09PcDFucS9YMHFGaGRoTDhVRkY0UkdNRVFNeURPV1VaMHpQRUFBdDJtYjlJWURsL2Q5
    Ngp6cTdZeWZkZ2VETERSUEhMcHZJbEUvRFZYYlRtQXhDanh4WUxxTzdXU1FLQmdRRHg3ajNlTjNM
    UWRMRTRxQ0xrClpPWnh5SGFSUEhEY045WldvZDY3TkpSdlEzQ3ZpWHdKM2dJTUtpKzJzNDVMQXlD
    RlJacFZUcktaSWdvbDU0MVgKRDdLOVlLaTZ2Zzh2Q3VWbkdoYTBxd25vdFQ4dDlOWHIxUkQyQWVo
    dmNuN1BDeHVtZGlySEZ1NFBKSjhyMVhKMAoydlUxWnFuZXJ0eXl5SGFycjRBbm11VTZKUUtCZ1FE
    NFRCWHYzWExybWRtQXFhSVcvemdmRFFnRW1lNDR5YWV2ClBxbGFTaTUrRTBmMlFybnFuTlVsbkZN
    ZmN0QlhNZllQOVp4emM1M2hETEt5ZlUrQ1c2R2s4TUJxT2NkRmkySDgKUUd5eU9VbEs0WHByRW5W
    MkN1WmczRDJINFpVNDJmMUNMaGVza1IrbUF6cE1ldWE5ZHdVSVh1SVJYQlU2Sk9zOQprK0lLR1dQ
    RXlRS0JnR1dnbUtpaVRqNjI1a05RamVlM1l2NWxJVGw5VkVPTnlTSDNPV01XZ1V3RDNuQStwclpX
    ClpqSEovdVVXcEMxcWtOeXJFbHZIaFVyQ2U5VFVZaEV5YlBrVWc0eCtqazVLbTNjbUJHZThlWnNo
    bC9xc0lMakMKZGkrQk9heW5RaEdqTHVoTU4wZ09uODRJcWp4MW0zRHZFWlp2RytpSk4vaDZNUytK
    dDZIcmRXTnBBb0dBV3JjeApySmt6eTNCQ1R3ZXErTXYyTFNJTnMrQ3BjSVg4aGNKWERXM2MzcU1j
    djVSUmFLNDBFYkd6ak9IZHpIMnNjTmhECmVNcmMrOFF2NVpaeTNpV3NRUjdVcmZxK0cySjVRamdu
    ZmxYL3VTUDRIZlo0ZzlBbnEydkw3MEV6eTdtWkZmelIKR1hOTUpOTTVFWWcxbFROTzIyZ1BJRmlN
    U05vRU9GTTNXb2s4TWtFQ2dZQlBKWGR2WnZqWURPV0NubWlDT0FjcgpPVVF3SU9DSjdURDVKSWVy
    VGpKRDdkN1pkT2FTTVVyWlpUZWZhdnJDaDJjTWJLeEV3WWhrTTM2YysvbFBKQlY3CmdkYVVMZElJ
    blpqeU5ESW1XcnBBS05iaG52QkVic1Ixc213OWFRRmpSZWpQeThOL0owZXh4ZzJ2MytHK3FZNWYK
    enRvQkN5aW1ReXpXT0dqaUpzeTVJZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

type: kubernetes.io/tls

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: busybox-multitool-svc
            port:
              name: web1
  tls:
    - hosts:
      - nginx-multitool
      secretName: my-app-secret-tls