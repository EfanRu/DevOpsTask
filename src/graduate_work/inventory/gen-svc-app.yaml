apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-db
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: app-db
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app-db
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-db
        app.kubernetes.io/part-of: ingress-nginx
    spec:
      containers:
        - name: web-spring-boot
          image: ledok/jm_my_web4_spring_boot:0.0.1
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: SPRING_DATASOURCE_PASSWORD
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: SPRING_JPA_HIBERNATE_DDL_AUTO
          ports:
            - containerPort: 8082
              protocol: TCP
        - name: postgres
          image: postgres:13.3
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
              protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: configmap
          configMap:
            name: configmap

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: app-db
    app.kubernetes.io/part-of: ingress-nginx
  name: app-db
  namespace: ingress-nginx
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - nodePort: 31380
      port: 8082
      protocol: TCP
      targetPort: 8082
      name: web-app
    - nodePort: 31543
      port: 5432
      protocol: TCP
      targetPort: 5432
      name: web-db
  selector:
    app.kubernetes.io/name: app-db
    app.kubernetes.io/part-of: ingress-nginx
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap
  namespace: ingress-nginx
data:
  SPRING_DATASOURCE_URL: "jdbc:postgresql://localhost:5432/test"
  SPRING_DATASOURCE_USERNAME: "postgres"
  SPRING_DATASOURCE_PASSWORD: "postgres"
  SPRING_JPA_HIBERNATE_DDL_AUTO: "create"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_DB: "test"